#!/bin/bash
# Aᴜᴛʜᴏʀ » UᴍᴜT KᴀRᴀ
# https://t.me/umutkaratools
version="v1.2"
scriptStatus="True"

True='✅'
False='❗'
info='🔸'
w='\e[1;97m'
r='\e[1;31m'
g='\e[1;32m'
y='\e[1;33m'
scriptName=`basename "$0"`
scriptNameCount=`echo "$scriptName" |wc -m`

if [[ $1 == -e || $1 == --edit  ]];then
	if [[ -a $PREFIX/bin/vim ]];then
		vim $0
	fi
	exit
fi

if [[ $1 == -o || $1 == --open  ]];then
	if [[ -a $PREFIX/bin/termux-open ]];then
		termux-open $0
	fi
	exit
fi

if [[ ! -a $PREFIX/bin/git ]];then
	printf "\n\n\n${g}
	\r\t╔══════════════════╗
	\r\t║ ✅ ${w}Gɪᴛ Kᴜʀᴜʟᴜʏᴏʀ ${g}║
	\r\t╚══════════════════╝\n\n\n"
	pkg install git -y
fi

if [[ ! -a $PREFIX/bin/jq ]];then
	printf "\n\n\n${g}
	\r\t╔═════════════════╗
	\r\t║ ✅ ${w}Jq Kᴜʀᴜʟᴜʏᴏʀ ${g}║
	\r\t╚═════════════════╝\n\n\n"
	pkg install jq -y
fi

if [[ ! -a $PREFIX/bin/curl ]];then
	printf "\n\n\n${g}
	\r\t╔═══════════════════╗
	\r\t║ ✅ ${w}CᴜʀL Kᴜʀᴜʟᴜʏᴏʀ ${g}║
	\r\t╚═══════════════════╝\n\n\n"
	pkg install curl -y
fi

function _autoUpdate () {

	# SCRİPT UPDATE

	scriptVersion=$(curl -s https://raw.githubusercontent.com/Umutkara-tools/TermuxScripts/master/$scriptName |sed -n 4p |awk -F '"' '{print $2}')
	
	myScriptVersion=$(cat $0 |sed -n 4p |awk -F '"' '{print $2}')

	if [[ $scriptVersion != $myScriptVersion ]];then

		scriptStatus=$(curl -s https://raw.githubusercontent.com/Umutkara-tools/TermuxScripts/master/$scriptName |sed -n 5p |awk -F '"' '{print $2}')
		if [[ $scriptStatus == True ]];then
			clear
			printf "\n\n\n"
			read -e -p $'\t\e[1;97mYᴇɴɪ Gᴜɴᴄᴇʟʟᴇᴍᴇ Bᴜʟᴜɴᴅᴜ Sᴄʀɪᴘᴛ Gᴜɴᴄᴇʟʟᴇɴꜱɪɴ Mɪ? \e[33m[ʏ/N] \e[97m] \e[32m~ \e[31m»»\e[97m ' update
			if [[ $update == y || $update == Y ]];then
				curl -s https://raw.githubusercontent.com/Umutkara-tools/TermuxScripts/master/$scriptName > $0
				printf "${g}
				\r\t╔════════════════════════════════════════╗
				\r\t║ ✅ ${w}Ｓｃｒｉｐｔ Ｇｕｎｃｅｌｌｅｎｄｉ ${g}║
				\r\t╚════════════════════════════════════════╝\n\n\n"
				exit
			fi
		fi
	fi
}

_autoUpdate

git config --global user.email "$(whoami)@localhost"
git config --global user.name "$(whoami)"


userName="No Username"
repoName="No Repo"
repoStatusIcon="❗"
userNameStatusIcon="❗"

if [[ -a .git ]];then
	repoControl=$(cat .git/config |grep -o "github.com" |wc -l)
fi

if [[ $repoControl == 1 ]];then
	userName=$(cat .git/config |grep url |awk -F'/' '{print $4}')
	repoName=$(cat .git/config |grep url |awk -F '.git' '{print $2}' | awk -F "/" '{print $3}')
	repoNameCount=$(echo "$repoName" |wc -m)
	userNameCount=$(echo "$userName" |wc -m)
	repoStatus="True"
	userNameStatus="True"
	sessionControl="True"
	repoStatusIcon="✅"
	if [[ -s  $HOME/.git-credentials ]];then
		userNameToken=$(cat $HOME/.git-credentials |awk -F ":" '{print $2}' |tr -d '/')
		if [[ $userName == $userNameToken ]];then
			sessionControl="False"
			userNameStatusIcon="✅"
			repoStatusIcon="✅"
		fi

	fi
else
	userNameStatus="False"
	userNameStatusIcon="❗"

	if [[ -s  $HOME/.git-credentials ]];then
		userName=$(cat $HOME/.git-credentials |awk -F ":" '{print $2}' |tr -d '/')
		userNameStatusIcon="✅"
		userNameStatus="True"
		sessionControl="False"
	fi

	repoStatus="False"
	repoStatusIcon="❗"
	repoNameCount=$(echo "$repoName" |wc -m)
	userNameCount=$(echo "$userName" |wc -m)

fi

if [[ -s  $HOME/.github-sessions ]];then
	
	if [[ $sessionControl == True ]];then
		sessionCount=$(cat $HOME/.github-sessions |wc -l)

		for count in `seq 1 $sessionCount`
		do
			userNames=$(cat $HOME/.github-sessions |sed -n ${count}p |awk -F ":" '{print $2}' |tr -d '/')
			if [[ $userName == $userNames ]];then
				selected=$(cat $HOME/.github-sessions |sed -n ${count}p)
				echo "$selected" > $HOME/.git-credentials
				userName=$(cat $HOME/.git-credentials |awk -F ":" '{print $2}' |tr -d '/')
				userNameCount=$(echo "$userName" |wc -m)
				repoStatusIcon="✅"
				userNameStatusIcon="✅"
			fi
		done
	fi
fi

let userNameCount+=8
let repoNameCount+=$userNameCount
border="═"
if [[ -a $HOME/.result ]];then
	rm $HOME/.result
fi
for count in `seq 0 $repoNameCount`
do
	printf "$border" >> $HOME/.result
done
border=$(cat $HOME/.result)

function _logout (){
	read -e -p $'\t\e[1;97m[ \e[32mÇıᴋış Yᴀᴘıʟꜱıɴ Mı? \e[33m[ʏ/N] \e[97m] \e[32m~ \e[31m»»\e[97m ' exitScript
	if [[ $exitScript == y || $exitScript == Y || $exitScript == "" ]];then
		printf "\n\n\n${g}
		\r\t╔══════════════════╗
		\r\t║ ❗ ${w}Cɪᴋɪꜱ Yᴀᴘɪʟᴅɪ ${g}║
		\r\t╚══════════════════╝\n\n\n"
		exit
	else
		sleep 1
		$0
		exit
	fi
}

function _github-sessions () {

sessionCount=$(cat $HOME/.github-sessions |wc -l)

for count in `seq 1 $sessionCount`
do
	userName=$(cat $HOME/.github-sessions |sed -n ${count}p |awk -F ":" '{print $2}' |tr -d '/')
	echo -e "\r\t${r}[${w}$count${r}]${w} $userName\n\n"

done

if [[ $1 == show ]];then
	_logout
fi

while true
do
	read -e -p $'\t\e[1;97m[ \e[32mSᴇᴄᴇɴᴇᴋ Gɪʀɪɴɪᴢ \e[97m] \e[32m~ \e[31m»»\e[97m ' options
	if [[ $options =~ ^[0-9]+$ ]];then
		if [[ $options -lt $sessionCount || $options == $sessionCount ]];then
			selected=$(cat $HOME/.github-sessions |sed -n ${options}p)
			if [[ $1 == select ]];then
				echo "$selected" > $HOME/.git-credentials
				printf "${g}
				\r\t╔══════════════════╗
				\r\t║ ✅ ${w}Hᴇꜱᴀᴘ Sᴇᴄɪʟᴅɪ ${g}║
				\r\t╚══════════════════╝\n\n\n"
				break
			fi

			if [[ $1 == remove ]];then
				cat $HOME/.github-sessions |sed ${options}d > $HOME/.result
				cat $HOME/.result > $HOME/.github-sessions
				printf "${g}
				\r\t╔═════════════════════╗
				\r\t║ ✅ ${w}Hᴇꜱᴀᴘ Kᴀʟᴅɪʀɪʟᴅɪ ${g}║
				\r\t╚═════════════════════╝\n\n\n"
				break
			fi
		else
			printf "\n${r}
			\r\t╔═════════════════╗
			\r\t║ ❗ ${w}Hᴀᴛᴀʟɪ ꜱᴇᴄɪᴍ ${r}║
			\r\t╚═════════════════╝\n\n\n"
		fi
	else
		printf "\n${r}
		\r\t╔═════════════════╗
		\r\t║ ❗ ${w}Sᴀʏɪ Gɪʀɪɴɪᴢ ${r}║
		\r\t╚═════════════════╝\n\n\n"
	fi

done

}

function _repoCheck () {

	while true
	do
		read -e -p $'\t\e[1;97m[ \e[32mDᴇᴘᴏ Aᴅɪ Gɪʀɪɴɪᴢ \e[97m] \e[32m~ \e[31m»»\e[97m ' repoName
		history -s $repoName

		repoCheck=$(curl -s "https://github.com/$userName/$repoName" |grep -o '<img alt="404' |sed -n 1p |wc -l)
		
		if [[ $repoCheck == 0 ]];then
			break
		else
			printf "${g}
			\r\t╔════════════════════════╗
			\r\t║ ❗ ${w}Yᴇɴɪ Dᴇᴘᴏ Oʟᴜꜱᴛᴜʀᴜɴ ${g}║
			\r\t╚════════════════════════╝\n\n\n"
			sleep 2
			am start -a android.intent.action.VIEW "https://github.com/new"
			printf "\n\n\n"
		fi
	
	done
}

function _repoShowOptions () {
	read -e -p $'\t\e[1;97m[ \e[32mGᴏʀᴜɴᴛᴜʟᴇᴍᴇᴋ Iꜱᴛᴇʀ ᴍɪꜱɪɴɪᴢ? \e[33m[ʏ/N] \e[97m] \e[32m~ \e[31m»»\e[97m ' repoShow
	if [[ $repoShow == y || $repoShow == Y || $repoShow == "" ]];then
		am start -a android.intent.action.VIEW "https://github.com/$userName/$repoName"
	fi
	printf "\n\n\n${g}
	\r\t╔══════════════════╗
	\r\t║ ❗ ${w}Cɪᴋɪꜱ Yᴀᴘɪʟᴅɪ ${g}║
	\r\t╚══════════════════╝\n\n\n"
	exit
}

function _tokenControl () {

	while true
	do
		if [[ $1 == control ]];then
			
			if [[ -s $HOME/.git-credentials ]];then
				break
			else
				if [[ -s $HOME/.github-sessions ]];then
					break
				fi
			fi

		fi
		
		read -e -p $'\t\e[1;97m[ \e[32mKᴜʟʟᴀɴɪᴄɪ Aᴅɪ Gɪʀɪɴɪᴢ \e[97m] \e[32m~ \e[31m»»\e[97m ' githubUserName
		history -s $githubUserNami
		printf "\n\n\n"
		read -e -p $'\t\e[1;97m[ \e[32mGɪᴛʜᴜʙ Tᴏᴋᴇɴ Gɪʀɪɴɪᴢ \e[97m] \e[32m~ \e[31m»»\e[97m ' githubToken
		history -s $githubToken

		tokenControl=$(echo "$githubToken" |grep -Po '(ghp_)(.*?)' |wc -l)

		if [[ $tokenControl == 1 ]];then
			echo "https://$githubUserName:$githubToken@github.com" > $HOME/.git-credentials
			echo "https://$githubUserName:$githubToken@github.com" >> $HOME/.github-sessions
			printf "\n\n${g}
			\r\t╔═════════════════════╗
			\r\t║ ✅ ${w}Tᴏᴋᴇɴ Kᴀʏᴅᴇᴅɪʟᴅɪ ${g}║
			\r\t╚═════════════════════╝\n\n\n"
			break
		else
			printf "\n\n${g}
			\r\t╔═════════════════╗
			\r\t║ ❗ ${w}Hᴀᴛᴀʟɪ Tᴏᴋᴇɴ ${g}║
			\r\t╚═════════════════╝\n\n\n"
		fi
	done

}


clear
printf "\n\n\e[32m
\t\t\t\t\t   ╔════════════════╗
\t\t\t\t\t   ║ ${r}<${w} UᴍᴜT KᴀRᴀ ${r}/> ${g}║
\t╔═══════════════════════════════════════════════════╗
\t║                                                   ║
\t║   ███████  ██ ████████ ██   ██ ██    ██ ██████    ║
\t║   ██       ██    ██    ██   ██ ██    ██ ██   ██   ║
\t║   ██   ███ ██    ██    ███████ ██    ██ ██████    ║
\t║   ██    ██ ██    ██    ██   ██ ██    ██ ██   ██   ║
\t║   ████████ ██    ██    ██   ██ ████████ ██████    ║
\t║                                                   ║
\t║\t\t\t\t\t       ${y}$version${g} ║
\t╚═══════════════════════════════════════════════════╝
\t║\e[97m $userNameStatusIcon $userName ${y}/ $repoStatusIcon ${w}$repoName ${g}║
\t╚$border╝
\t\t\t\t\t   ╔════════════════╗
\t\t\t\t\t   ║${r} Ｏｐｔｉｏｎｓ ${g}║
\t╔═══════════════════════════════════════════════════╗
\t║                                                   ║
\t║ ${r}[${w}1${r}]  ───────── ${w}Rᴇᴘᴏ Cʀᴇᴀᴛᴇ ${r}────────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}2${r}]  ───────── ${w}Rᴇᴘᴏ Uᴘᴅᴀᴛᴇ ${r}────────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}3${r}]  ───────── ${w}Rᴇᴘᴏꜱ Sʜᴏw ${r}─────────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}4${r}]  ───────── ${w}Pʀɪᴠᴀᴛᴇ Rᴇᴘᴏ Cʟᴏɴᴇ ${r}─────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}5${r}]  ───────── ${w}Tᴏᴋᴇɴ Sᴀᴠᴇ ${r}─────────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}6${r}]  ───────── ${w}Uꜱᴇʀɴᴀᴍᴇꜱ Sʜᴏw ${r}─────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}7${r}]  ───────── ${w}Uꜱᴇʀɴᴀᴍᴇ Sᴇʟᴇᴄᴛ ${r}────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}8${r}]  ───────── ${w}Uꜱᴇʀɴᴀᴍᴇ Rᴇᴍᴏᴠᴇ ${r}────────────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}9${r}]  ───────── ${y}Sᴄʀɪᴘᴛ Cʀᴇᴀᴛᴇ Sʜᴏʀᴛᴄᴜᴛ ${r}─────────── ${g}║
\t║                                                   ║
\t║ ${r}[${w}X${r}]  ───────── ${y}Exɪᴛ ${r}───────────────────────────── ${g}║
\t║                                                   ║
\t╚═══════════════════════════════════════════════════╝\n\n\n"

read -e -p $'\t\e[1;97m[ \e[32mSᴇᴄᴇɴᴇᴋ Gɪʀɪɴɪᴢ \e[97m] \e[32m~ \e[31m»»\e[97m ' options
history -s $options
printf "\n\n\n"

if [[ $options == 1 ]];then
	
	# REPO CREATE

	_tokenControl control

	if [[ $repoStatus == True ]];then
		read -e -p $'\t\e[1;97m[ \e[32mDɪᴢɪɴᴅᴇᴋɪ Gɪᴛ Dᴏꜱʏᴀʟᴀʀɪ Kᴀʟᴅɪʀɪʟꜱɪɴ Mɪ? \e[33m[ʏ/N] \e[97m] \e[32m~ \e[31m»»\e[97m ' repoRemove
		printf "\n\n\n"
		if [[ $repoRemove == y || $repoRemove == Y ]];then
			rm -rf .git
			printf "${g}
			\r\t╔═══════════════════════════════════════╗
			\r\t║ ❗ ${w}Dɪᴢɪɴᴅᴇᴋɪ Gɪᴛ Dᴏꜱʏᴀʟᴀʀɪ Kᴀʟᴅɪʀɪʟᴅɪ ${g}║
			\r\t╚═══════════════════════════════════════╝\n\n\n"

		else
			sleep 1
			$0
			exit
		fi

	fi

	if [[ -a .git ]];then
		rm -rf .git
	fi
	
	_repoCheck
	
	if [[ -a $PREFIX/bin/bul ]];then
		bul --swnop
	fi
	
	git init
	git add .
	git commit -m 'new update'
	git remote add origin https://github.com/$userName/$repoName.git
	git config credential.helper store
	git push -u origin master

	repoCheck=$(curl -s "https://github.com/$userName/$repoName" |grep -o '<img alt="404' |sed -n 1p |wc -l)
		
	if [[ $repoCheck == 0 ]];then	
		printf "\n\n\n${g}
		\r\t╔═════════════════════╗
		\r\t║ ✅ ${w}Dᴇᴘᴏ Oʟᴜꜱᴛᴜʀᴜʟᴅᴜ ${g}║
		\r\t╚═════════════════════╝\n\n\n"
		_repoShowOptions
	else
		printf "\n\n\n${g}
		\r\t╔════════════════════════╗
		\r\t║ ❗ ${w}Dᴇᴘᴏ Oʟᴜꜱᴛᴜʀᴜʟᴀᴍᴀᴅɪ ${g}║
		\r\t╚════════════════════════╝\n\n\n"
		_logout
	fi

elif [[ $options == 2 ]];then

	# REPO UPDATE

	_tokenControl control

	if [[ $repoStatus == True ]];then
		
		if [[ -s $PREFIX/bin/bul ]];then
			bul --swnop
		fi

		updatesStatus=$(git status -s |wc -l)
		
		if [[ $updatesStatus == 0 ]];then
			printf "${g}
			\r\t╔══════════════════════════╗
			\r\t║ ❗ ${w}Gᴜɴᴄᴇʟʟᴇᴍᴇ Bᴜʟᴜɴᴀᴍᴀᴅɪ ${g}║
			\r\t╚══════════════════════════╝\n\n\n"
			_logout
		fi

		git status -s
		printf "\n\n\n"
		read -e -p $'\t\e[1;97m[ \e[32mGᴜɴᴄᴇʟʟᴇᴍᴇ Yᴀᴘɪʟꜱɪɴ Mɪ? \e[33m[ʏ/N] \e[97m] \e[32m~ \e[31m»»\e[97m ' repoUpdate
		if [[ $repoUpdate == y || $repoUpdate == Y ]];then
			
			printf "\n\n\n"
			git add .
			git commit -m 'new_update'
			git config credential.helper store
			#git push https://github.com/$userName/$repoName.git
			git push -u origin master
	
			logStatus=$(git log |wc -l)
			commitStatus=$(git log |sed -n ${logStatus}p |grep -o "new" |wc -l)
		
			if [[ $commitStatus == 0 ]];then
				printf "${g}
				\r\t╔══════════════════════════╗
				\r\t║ ❗ ${w}Gᴜɴᴄᴇʟʟᴇᴍᴇ Yᴀᴘɪʟᴀᴍᴀᴅɪ ${g}║
				\r\t╚══════════════════════════╝\n\n\n"
				_logout
			fi

			printf "\n\n\n${g}
			\r\t╔═════════════════════╗
			\r\t║ ✅ ${w}Dᴇᴘᴏ Gᴜɴᴄᴇʟʟᴇɴᴅɪ ${g}║
			\r\t╚═════════════════════╝\n\n\n"
			_repoShowOptions

		else
			sleep 1
			$0
			exit
		fi

	else
		printf "${g}
		\r\t╔════════════════════╗
		\r\t║ ❗ ${w}Dᴇᴘᴏ Bᴜʟᴜɴᴀᴍᴀᴅɪ ${g}║
		\r\t╚════════════════════╝\n\n\n"

		_logout
	fi

elif [[ $options == 3 ]];then

	# REPOS SHOW
	
	if [[ $userNameStatus == True ]];then
		curl -s "https://api.github.com/users/$userName/repos?per_page=100" | jq -r ".[].name" | xargs -L1 > $HOME/.repos
		reposCount=$(cat $HOME/.repos |wc -l)

		for count in `seq 1 $reposCount`
		do
			reposNames=$(cat $HOME/.repos |sed -n ${count}p)
			echo -e "\r\t${r}[${w}$count${r}]${w} $reposNames\n\n"
		done

		if [[ -a $HOME/.repos ]];then
			rm $HOME/.repos
		fi

		printf "\n\n\n"
		_logout
	else
		printf "${g}
		\r\t╔═════════════════════════════╗
		\r\t║ ❗ ${w}Kᴜʟʟᴀɴɪᴄɪ Aᴅɪ Bᴜʟᴜɴᴀᴍᴀᴅɪ ${g}║
		\r\t╚═════════════════════════════╝\n\n\n"
		
		_logout
	fi

elif [[ $options == 4 ]];then

	# PRİVATE REPO CLONE

	_tokenControl control

	read -e -p $'\t\e[1;97m[ \e[32mDᴇᴘᴏ Aᴅɪ Gɪʀɪɴɪᴢ \e[97m] \e[32m~ \e[31m»»\e[97m ' repoName
	printf "\n\n\n"
	# --quite NO OUTPUT

	git clone $(cat $HOME/.git-credentials)/$userName/$repoName.git

	if [[ -a $repoName ]];then
		printf "${g}
		\r\t╔═══════════════════╗
		\r\t║ ✅ ${w}Dᴇᴘᴏ Iɴᴅɪʀɪʟᴅɪ ${g}║
		\r\t╚═══════════════════╝\n\n\n"
	else
		printf "${g}
		\r\t╔══════════════════════╗
		\r\t║ ❗ ${w}Dᴇᴘᴏ Iɴᴅɪʀɪʟᴇᴍᴇᴅɪ ${g}║
		\r\t╚══════════════════════╝\n\n\n"

	fi

	_logout
	
elif [[ $options == 5 ]];then

	# TOKEN SAVE
	
	_tokenControl save
	
	_logout

elif [[ $options == 6 ]];then

	# USERNAMES SHOW
	
	_tokenControl control

	if [[ -a $HOME/.github-sessions ]];then
		_github-sessions show
	else
		printf "${r}
		\r\t╔═══════════════╗
		\r\t║ ❗ ${w}Oᴛᴜʀᴜᴍ Yᴏᴋ ${r}║
		\r\t╚═══════════════╝\n\n\n"
	fi
	
	_logout

elif [[ $options == 7 ]];then

	# USERNAME SELECT
	
	_tokenControl control

	if [[ -a $HOME/.github-sessions ]];then
		_github-sessions select
		_logout
	else
		printf "${r}
		\r\t╔═══════════════╗
		\r\t║ ❗ ${w}Oᴛᴜʀᴜᴍ Yᴏᴋ ${r}║
		\r\t╚═══════════════╝\n\n\n"
	fi
	
	_logout

elif [[ $options == 8 ]];then

	# USERNAME REMOVE
	
	_tokenControl control

	if [[ -a $HOME/.github-sessions ]];then
		_github-sessions remove
		_logout
	else
		printf "${r}
		\r\t╔═══════════════╗
		\r\t║ ❗ ${w}Oᴛᴜʀᴜᴍ Yᴏᴋ ${r}║
		\r\t╚═══════════════╝\n\n\n"
	fi
	
	_logout

elif [[ $options == 9 ]];then

	# Sᴄʀɪᴘᴛ Cʀᴇᴀᴛᴇ Sʜᴏʀᴛᴄᴜᴛ
	if [[ ! -a $PREFIX/bin/$scriptName ]];then
		cp $0 $PREFIX/bin
		chmod 777 $PREFIX/bin/$0
		printf "${g}
		\r\t╔════════════════════════════════╗
		\r\t║ ✅ ${w}Sᴄʀɪᴘᴛ Kɪꜱᴀʏᴏʟᴜ Oʟᴜꜱᴛᴜʀᴜʟᴅᴜ ${g}║
		\r\t╚════════════════════════════════╝\n\n\n"
	else
		printf "${g}
		\r\t╔═══════════════════════════════════════╗
		\r\t║ ✅ ${w}Sᴄʀɪᴘᴛ Kɪꜱᴀʏᴏʟᴜ Zᴀᴛᴇɴ Oʟᴜꜱᴛᴜʀᴜʟᴍᴜꜱ ${g}║
		\r\t╚═══════════════════════════════════════╝\n\n\n"
		if [[ $0 != $PREFIX/bin/$scriptName ]];then
			read -e -p $'\t\e[1;97m[ \e[32mDᴇɢɪꜱᴛɪʀɪʟꜱɪɴ Mɪ? \e[33m[ʏ/N] \e[97m] \e[32m~ \e[31m»»\e[97m ' scriptChange
			printf "\n\n\n"
			if [[ $scriptChange == y || $scriptChange == Y ]];then
				rm $PREFIX/bin/$scriptName
				cp $0 $PREFIX/bin
				chmod 777 $PREFIX/bin/$0

				border="═"
				if [[ -a $HOME/.result ]];then
					rm $HOME/.result
				fi
				for count in `seq 1 $scriptNameCount`
				do
					printf "$border" >> $HOME/.result
				done
				border=$(cat $HOME/.result)

				printf "${g}
				\r\t╔════════════════════════╗
				\r\t║ ✅ ${w}Sᴄʀɪᴘᴛ Dᴇɢɪꜱᴛɪʀɪʟᴅɪ ${g}║
				\r\t╚════════════════════════╝\n${y}
				\r\t╔$border════════════════════════════════╗
				\r\t║ 🔸 ${w}Kɪꜱᴀʏᴏʟ Cᴀʟɪꜱᴛɪʀᴍᴀ Kᴏᴍᴜᴛᴜ »${g} $scriptName ${y}║
				\r\t╚$border════════════════════════════════╝"

			else
				sleep 1
				$0
				exit
			fi
		fi
	fi
	printf "\n\n\n"
	_logout
	
elif [[ $options == x || $options == X ]];then
	printf "${g}
	\r\t╔══════════════════╗
	\r\t║ ❗ ${w}Cɪᴋɪꜱ Yᴀᴘɪʟᴅɪ ${g}║
	\r\t╚══════════════════╝\n\n\n"
	exit

else
	printf "${r}
	\r\t╔═════════════════╗
	\r\t║ ❗ ${w}Hᴀᴛᴀʟɪ ꜱᴇᴄɪᴍ ${r}║
	\r\t╚═════════════════╝\n\n\n"
	sleep 1
	$0
	exit
fi

